// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_nasa_apod/test/src/features/apod/presentation/bloc/apod_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:flutter_nasa_apod/src/core/erros/failures.dart' as _i6;
import 'package:flutter_nasa_apod/src/features/apod/domain/entities/apod.dart'
    as _i7;
import 'package:flutter_nasa_apod/src/features/apod/domain/repositories/apod_repository.dart'
    as _i2;
import 'package:flutter_nasa_apod/src/features/apod/domain/usecases/get_apod_by_date.dart'
    as _i4;
import 'package:flutter_nasa_apod/src/features/apod/domain/usecases/manage_favorites.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApodRepository_0 extends _i1.SmartFake
    implements _i2.ApodRepository {
  _FakeApodRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetApodByDate].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetApodByDate extends _i1.Mock implements _i4.GetApodByDate {
  MockGetApodByDate() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApodRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeApodRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ApodRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Apod>> call(DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [date],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.Apod>>.value(
            _FakeEither_1<_i6.Failure, _i7.Apod>(
          this,
          Invocation.method(
            #call,
            [date],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.Apod>>);
}

/// A class which mocks [GetFavorites].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetFavorites extends _i1.Mock implements _i8.GetFavorites {
  MockGetFavorites() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApodRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeApodRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ApodRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Apod>>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, List<_i7.Apod>>>.value(
            _FakeEither_1<_i6.Failure, List<_i7.Apod>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.Apod>>>);
}

/// A class which mocks [SaveFavorite].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveFavorite extends _i1.Mock implements _i8.SaveFavorite {
  MockSaveFavorite() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApodRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeApodRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ApodRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> call(_i7.Apod? apod) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [apod],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #call,
            [apod],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);
}

/// A class which mocks [RemoveFavorite].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveFavorite extends _i1.Mock implements _i8.RemoveFavorite {
  MockRemoveFavorite() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApodRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeApodRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ApodRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> call(_i7.Apod? apod) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [apod],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
            _FakeEither_1<_i6.Failure, void>(
          this,
          Invocation.method(
            #call,
            [apod],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, void>>);
}
